Standard ML of New Jersey v110.74 [built: Thu Feb 19 22:45:16 2015]
- [autoloading]
[library $smlnj/cm/cm.cm is stable]
[library $smlnj/internal/cm-sig-lib.cm is stable]
[library $/pgraph.cm is stable]
[library $smlnj/internal/srcpath-lib.cm is stable]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
[scanning sources.cm]
[attempting to load plugin $/lex-ext.cm]
[library $/lex-ext.cm is stable]
[library $smlnj/cm/tools.cm is stable]
[library $smlnj/internal/cm-lib.cm is stable]
[plugin $/lex-ext.cm loaded successfully]
[attempting to load plugin $/mllex-tool.cm]
[library $/mllex-tool.cm is stable]
[plugin $/mllex-tool.cm loaded successfully]
[attempting to load plugin $/grm-ext.cm]
[library $/grm-ext.cm is stable]
[plugin $/grm-ext.cm loaded successfully]
[attempting to load plugin $/mlyacc-tool.cm]
[library $/mlyacc-tool.cm is stable]
[plugin $/mlyacc-tool.cm loaded successfully]
[library $/ml-yacc-lib.cm is stable]
[library $SMLNJ-LIB/Util/smlnj-lib.cm is stable]
[library $SMLNJ-ML-YACC-LIB/ml-yacc-lib.cm is stable]
[loading (sources.cm):table.sig]
[loading (sources.cm):table.sml]
[loading (sources.cm):symbol.sml]
[loading (sources.cm):temp.sig]
[loading (sources.cm):temp.sml]
[loading (sources.cm):tree.sml]
[loading (sources.cm):errormsg.sml]
[loading (sources.cm):frame.sig]
[loading (sources.cm):mipsframe.sml]
[loading (sources.cm):types.sml]
[loading (sources.cm):translate.sml]
[loading (sources.cm):absyn.sml]
[loading (sources.cm):prabsyn.sml]
[loading (sources.cm):tiger.grm.sig]
[loading (sources.cm):env.sig]
[loading (sources.cm):env.sml]
[loading (sources.cm):findescape.sml]
[loading (sources.cm):tiger.lex.sml]
[loading (sources.cm):tiger.grm.sml]
[loading (sources.cm):parse.sml]
[loading (sources.cm):printtree.sml]
[loading (sources.cm):semant.sml]
[New bindings added.]
val it = true : bool
================ AST ==================
val it = () : unit
[autoloading]
[autoloading done]
LetExp([
 TypeDec[
  (any,
   RecordTy[
    (any,false,int)])],
 VarDec(buffer,false,NONE,
  CallExp(getchar,[])),
 FunctionDec[
  (readint,[
   (any,false,any)],
SOME(int),
   LetExp([
    VarDec(i,false,NONE,
     IntExp(0)),
    FunctionDec[
     (isdigit,[
      (s,false,string)],
SOME(int),
      IfExp(
       OpExp(GeOp,
        CallExp(ord,[
         VarExp(
          SimpleVar(buffer))]),
        CallExp(ord,[
         StringExp("0")])),
       OpExp(LeOp,
        CallExp(ord,[
         VarExp(
          SimpleVar(buffer))]),
        CallExp(ord,[
         StringExp("9")])),
       IntExp(0))),
     (skipto,[],
NONE,
      WhileExp(
       IfExp(
        OpExp(EqOp,
         VarExp(
          SimpleVar(buffer)),
         StringExp(" ")),
        IntExp(1),
        OpExp(EqOp,
         VarExp(
          SimpleVar(buffer)),
         StringExp("
"))),
       AssignExp(
        SimpleVar(buffer),
        CallExp(getchar,[]))))]],
    SeqExp[
     CallExp(skipto,[]),
     AssignExp(
      FieldVar(
       SimpleVar(any),
       any),
      CallExp(isdigit,[
       VarExp(
        SimpleVar(buffer))])),
     WhileExp(
      CallExp(isdigit,[
       VarExp(
        SimpleVar(buffer))]),
      SeqExp[
       AssignExp(
        SimpleVar(i),
        OpExp(MinusOp,
         OpExp(PlusOp,
          OpExp(TimesOp,
           VarExp(
            SimpleVar(i)),
           IntExp(10)),
          CallExp(ord,[
           VarExp(
            SimpleVar(buffer))])),
         CallExp(ord,[
          StringExp("0")]))),
       AssignExp(
        SimpleVar(buffer),
        CallExp(getchar,[]))]),
     VarExp(
      SimpleVar(i))]))],
 TypeDec[
  (list,
   RecordTy[
    (first,false,int),
    (rest,false,list)])],
 FunctionDec[
  (readlist,[],
SOME(list),
   LetExp([
    VarDec(any,false,NONE,
     RecordExp(any,[

      (any,
       IntExp(0))])),
    VarDec(i,false,NONE,
     CallExp(readint,[
      VarExp(
       SimpleVar(any))]))],
    SeqExp[
     IfExp(
      VarExp(
       FieldVar(
        SimpleVar(any),
        any)),
      RecordExp(list,[

       (first,
        VarExp(
         SimpleVar(i))),
       (rest,
        CallExp(readlist,[]))]),
      NilExp)])),
  (merge,[
   (a,false,list),
   (b,false,list)],
SOME(list),
   IfExp(
    OpExp(EqOp,
     VarExp(
      SimpleVar(a)),
     NilExp),
    VarExp(
     SimpleVar(b)),
    IfExp(
     OpExp(EqOp,
      VarExp(
       SimpleVar(b)),
      NilExp),
     VarExp(
      SimpleVar(a)),
     IfExp(
      OpExp(LtOp,
       VarExp(
        FieldVar(
         SimpleVar(a),
         first)),
       VarExp(
        FieldVar(
         SimpleVar(b),
         first))),
      RecordExp(list,[

       (first,
        VarExp(
         FieldVar(
          SimpleVar(a),
          first))),
       (rest,
        CallExp(merge,[
         VarExp(
          FieldVar(
           SimpleVar(a),
           rest)),
         VarExp(
          SimpleVar(b))]))]),
      RecordExp(list,[

       (first,
        VarExp(
         FieldVar(
          SimpleVar(b),
          first))),
       (rest,
        CallExp(merge,[
         VarExp(
          SimpleVar(a)),
         VarExp(
          FieldVar(
           SimpleVar(b),
           rest))]))]))))),
  (printint,[
   (i,false,int)],
NONE,
   LetExp([
    FunctionDec[
     (f,[
      (i,false,int)],
NONE,
      IfExp(
       OpExp(GtOp,
        VarExp(
         SimpleVar(i)),
        IntExp(0)),
       SeqExp[
        CallExp(f,[
         OpExp(DivideOp,
          VarExp(
           SimpleVar(i)),
          IntExp(10))]),
        CallExp(print,[
         CallExp(chr,[
          OpExp(PlusOp,
           OpExp(MinusOp,
            VarExp(
             SimpleVar(i)),
            OpExp(TimesOp,
             OpExp(DivideOp,
              VarExp(
               SimpleVar(i)),
              IntExp(10)),
             IntExp(10))),
           CallExp(ord,[
            StringExp("0")]))])])]))]],
    SeqExp[
     IfExp(
      OpExp(LtOp,
       VarExp(
        SimpleVar(i)),
       IntExp(0)),
      SeqExp[
       CallExp(print,[
        StringExp("-")]),
       CallExp(f,[
        OpExp(MinusOp,
         IntExp(0),
         VarExp(
          SimpleVar(i)))])],
      IfExp(
       OpExp(GtOp,
        VarExp(
         SimpleVar(i)),
        IntExp(0)),
       CallExp(f,[
        VarExp(
         SimpleVar(i))]),
       CallExp(print,[
        StringExp("0")])))])),
  (printlist,[
   (l,false,list)],
NONE,
   IfExp(
    OpExp(EqOp,
     VarExp(
      SimpleVar(l)),
     NilExp),
    CallExp(print,[
     StringExp("
")]),
    SeqExp[
     CallExp(printint,[
      VarExp(
       FieldVar(
        SimpleVar(l),
        first))]),
     CallExp(print,[
      StringExp(" ")]),
     CallExp(printlist,[
      VarExp(
       FieldVar(
        SimpleVar(l),
        rest))])]))],
 VarDec(list1,false,NONE,
  CallExp(readlist,[])),
 VarDec(list2,false,NONE,
  SeqExp[
   AssignExp(
    SimpleVar(buffer),
    CallExp(getchar,[])),
   CallExp(readlist,[])])],
 SeqExp[
  CallExp(printlist,[
   CallExp(merge,[
    VarExp(
     SimpleVar(list1)),
    VarExp(
     SimpleVar(list2))])])])
val it = () : unit
============ Type-checking ============
val it = () : unit
val it =
  [PROC
     {body=EXP (ESEQ #),
      frame={curOffset=ref #,formals=[#],name=-,numLocals=ref #}},
   PROC
     {body=EXP (ESEQ #),
      frame={curOffset=ref #,formals=[#],name=-,numLocals=ref #}},
   PROC
     {body=EXP (ESEQ #),
      frame={curOffset=ref #,formals=[#,#,#],name=-,numLocals=ref #}},
   PROC
     {body=EXP (ESEQ #),
      frame={curOffset=ref #,formals=[#,#],name=-,numLocals=ref #}},
   STRING (-,"-"),
   PROC
     {body=EXP (CONST #),
      frame={curOffset=ref #,formals=[#,#],name=-,numLocals=ref #}},
   PROC
     {body=EXP (ESEQ #),
      frame={curOffset=ref #,formals=[#,#],name=-,numLocals=ref #}},
   PROC
     {body=EXP (ESEQ #),
      frame={curOffset=ref #,formals=[#,#],name=-,numLocals=ref #}},
   PROC
     {body=EXP (ESEQ #),
      frame={curOffset=ref #,formals=[#,#],name=-,numLocals=ref #}},
   STRING (-,"9"),STRING (-,"0"),
   PROC
     {body=SEQ [#,#,#,#,#,#],
      frame={curOffset=ref #,formals=[#],name=-,numLocals=ref #}},...]
  : MipsFrame.frag list
================ IR ==================
val it = () : unit
= FRAME with name = L92
numlocals = 3 curOffset = 0
EXP(
 ESEQ(
  SEQ(
   MOVE(
    TEMP t223,
    ESEQ(
     SEQ(
      MOVE(
       TEMP t163,
       TEMP t100),
      EXP(
       CALL(
        NAME L123,
         TEMP t100)),
),
     CONST 0)),
   MOVE(
    TEMP t222,
    CALL(
     NAME L123,
      TEMP t100)),
   MOVE(
    TEMP t163,
    TEMP t100),
),
  ESEQ(
   SEQ(
    EXP(
     CALL(
      NAME L120,
       TEMP t100,
       CALL(
        NAME L122,
         TEMP t100,
         TEMP t222,
         TEMP t223))),
),
   CONST 0)))

FRAME with name = L123
numlocals = 2 curOffset = 0
EXP(
 ESEQ(
  SEQ(
   MOVE(
    TEMP t213,
    CALL(
     NAME L93,
      MEM(
       TEMP t100),
      TEMP t210)),
   MOVE(
    TEMP t210,
    ESEQ(
     SEQ(
      MOVE(
       MEM(
        BINOP(PLUS,
         TEMP t212,
         CONST 0)),
       CONST 0),
      MOVE(
       TEMP t212,
       CALL(
        NAME initRecord,
         CONST 1)),
),
     TEMP t212)),
),
  ESEQ(
   SEQ(
    EXP(
     ESEQ(
      SEQ(
       CJUMP(EQ,
        CONST 1,
        MEM(
         BINOP(PLUS,
          TEMP t210,
          BINOP(MUL,
           CONST 0,
           CONST 4))),
        L168,L169),
       LABEL L168,
       MOVE(
        TEMP t216,
        ESEQ(
         SEQ(
          MOVE(
           MEM(
            BINOP(PLUS,
             TEMP t215,
             CONST 0)),
           TEMP t213),
          SEQ(
           MOVE(
            MEM(
             BINOP(PLUS,
              TEMP t215,
              CONST 4)),
            CALL(
             NAME L123,
              MEM(
               TEMP t100))),
           MOVE(
            TEMP t215,
            CALL(
             NAME initRecord,
              CONST 2)),
),
),
         TEMP t215)),
       JUMP(
        NAME L170),
       LABEL L169,
       MOVE(
        TEMP t216,
        CONST 0),
       JUMP(
        NAME L170),
),
      TEMP t216)),
),
   CONST 0)))

FRAME with name = L122
numlocals = 0 curOffset = 0
EXP(
 ESEQ(
  SEQ(
   CJUMP(EQ,
    TEMP t173,
    CONST 0,
    L165,L166),
   LABEL L165,
   MOVE(
    TEMP t209,
    TEMP t174),
   JUMP(
    NAME L167),
   LABEL L166,
   MOVE(
    TEMP t209,
    ESEQ(
     SEQ(
      CJUMP(EQ,
       TEMP t174,
       CONST 0,
       L162,L163),
      LABEL L162,
      MOVE(
       TEMP t208,
       TEMP t173),
      JUMP(
       NAME L164),
      LABEL L163,
      MOVE(
       TEMP t208,
       ESEQ(
        SEQ(
         CJUMP(LT,
          MEM(
           BINOP(PLUS,
            TEMP t173,
            BINOP(MUL,
             CONST 1,
             CONST 4))),
          MEM(
           BINOP(PLUS,
            TEMP t174,
            BINOP(MUL,
             CONST 1,
             CONST 4))),
          L159,L160),
         LABEL L159,
         MOVE(
          TEMP t206,
          ESEQ(
           SEQ(
            MOVE(
             MEM(
              BINOP(PLUS,
               TEMP t204,
               CONST 0)),
             MEM(
              BINOP(PLUS,
               TEMP t173,
               BINOP(MUL,
                CONST 1,
                CONST 4)))),
            SEQ(
             MOVE(
              MEM(
               BINOP(PLUS,
                TEMP t204,
                CONST 4)),
              CALL(
               NAME L122,
                MEM(
                 TEMP t100),
                MEM(
                 BINOP(PLUS,
                  TEMP t173,
                  BINOP(MUL,
                   CONST 0,
                   CONST 4))),
                TEMP t174)),
             MOVE(
              TEMP t204,
              CALL(
               NAME initRecord,
                CONST 2)),
),
),
           TEMP t204)),
         JUMP(
          NAME L161),
         LABEL L160,
         MOVE(
          TEMP t206,
          ESEQ(
           SEQ(
            MOVE(
             MEM(
              BINOP(PLUS,
               TEMP t205,
               CONST 0)),
             MEM(
              BINOP(PLUS,
               TEMP t174,
               BINOP(MUL,
                CONST 1,
                CONST 4)))),
            SEQ(
             MOVE(
              MEM(
               BINOP(PLUS,
                TEMP t205,
                CONST 4)),
              CALL(
               NAME L122,
                MEM(
                 TEMP t100),
                TEMP t173,
                MEM(
                 BINOP(PLUS,
                  TEMP t174,
                  BINOP(MUL,
                   CONST 0,
                   CONST 4))))),
             MOVE(
              TEMP t205,
              CALL(
               NAME initRecord,
                CONST 2)),
),
),
           TEMP t205)),
         JUMP(
          NAME L161),
),
        TEMP t206)),
      JUMP(
       NAME L164),
),
     TEMP t208)),
   JUMP(
    NAME L167),
),
  TEMP t209))

FRAME with name = L121
numlocals = 0 curOffset = 0
EXP(
 ESEQ(
  SEQ(
),
  ESEQ(
   SEQ(
    EXP(
     ESEQ(
      SEQ(
       CJUMP(LT,
        TEMP t172,
        CONST 0,
        L135,L136),
       LABEL L135,
       MOVE(
        TEMP t179,
        ESEQ(
         SEQ(
          EXP(
           TEMP t100),
          EXP(
           CALL(
            NAME L127,
             TEMP t100,
             BINOP(MINUS,
              CONST 0,
              TEMP t172))),
),
         CONST 0)),
       JUMP(
        NAME L137),
       LABEL L136,
       MOVE(
        TEMP t179,
        ESEQ(
         SEQ(
          CJUMP(GT,
           TEMP t172,
           CONST 0,
           L132,L133),
          LABEL L132,
          MOVE(
           TEMP t178,
           CALL(
            NAME L127,
             TEMP t100,
             TEMP t172)),
          JUMP(
           NAME L134),
          LABEL L133,
          MOVE(
           TEMP t178,
           TEMP t100),
          JUMP(
           NAME L134),
),
         TEMP t178)),
       JUMP(
        NAME L137),
),
      TEMP t179)),
),
   CONST 0)))

Label: L128 with string -
FRAME with name = L127
numlocals = 0 curOffset = 0
EXP(
 CONST 0)

FRAME with name = L120
numlocals = 0 curOffset = 0
EXP(
 ESEQ(
  SEQ(
   CJUMP(EQ,
    TEMP t171,
    CONST 0,
    L124,L125),
   LABEL L124,
   MOVE(
    TEMP t175,
    TEMP t100),
   JUMP(
    NAME L126),
   LABEL L125,
   MOVE(
    TEMP t175,
    ESEQ(
     SEQ(
      EXP(
       CALL(
        NAME L121,
         MEM(
          TEMP t100),
         MEM(
          BINOP(PLUS,
           TEMP t171,
           BINOP(MUL,
            CONST 1,
            CONST 4))))),
      EXP(
       TEMP t100),
      EXP(
       CALL(
        NAME L120,
         MEM(
          TEMP t100),
         MEM(
          BINOP(PLUS,
           TEMP t171,
           BINOP(MUL,
            CONST 0,
            CONST 4))))),
),
     CONST 0)),
   JUMP(
    NAME L126),
),
  TEMP t175))

FRAME with name = L93
numlocals = 1 curOffset = 0
EXP(
 ESEQ(
  SEQ(
   MOVE(
    TEMP t165,
    CONST 0),
),
  ESEQ(
   SEQ(
    EXP(
     CALL(
      NAME L94,
       TEMP t100)),
    MOVE(
     MEM(
      BINOP(PLUS,
       TEMP t164,
       BINOP(MUL,
        CONST 0,
        CONST 4))),
     CALL(
      NAME L95,
       TEMP t100,
       TEMP t163)),
    SEQ(
     LABEL L115,
     CJUMP(EQ,
      CONST 1,
      CALL(
       NAME L95,
        TEMP t100,
        TEMP t163),
      L116,L114),
     LABEL L116,
     SEQ(
      MOVE(
       TEMP t165,
       BINOP(MINUS,
        BINOP(PLUS,
         BINOP(MUL,
          TEMP t165,
          CONST 10),
         TEMP t100),
        TEMP t100)),
      MOVE(
       TEMP t163,
       TEMP t100),
),
     JUMP(
      NAME L115),
     LABEL L114,
),
    EXP(
     TEMP t165),
),
   CONST 0)))

FRAME with name = L95
numlocals = 0 curOffset = 0
EXP(
 ESEQ(
  SEQ(
   CJUMP(GE,
    TEMP t100,
    TEMP t100,
    L111,L112),
   LABEL L111,
   MOVE(
    TEMP t170,
    ESEQ(
     SEQ(
      MOVE(
       TEMP t169,
       CONST 1),
      CJUMP(LE,
       TEMP t100,
       TEMP t100,
       L109,L110),
      LABEL L110,
      MOVE(
       TEMP t169,
       CONST 0),
      LABEL L109,
),
     TEMP t169)),
   JUMP(
    NAME L113),
   LABEL L112,
   MOVE(
    TEMP t170,
    CONST 0),
   JUMP(
    NAME L113),
),
  TEMP t170))

Label: L108 with string 9
Label: L107 with string 0
FRAME with name = L94
numlocals = 0 curOffset = 0
SEQ(
 LABEL L105,
 CJUMP(EQ,
  CONST 1,
  ESEQ(
   SEQ(
    CJUMP(EQ,
     CONST 1,
     CALL(
      NAME stringEqual,
       TEMP t163,
       NAME L96),
     L102,L103),
    LABEL L102,
    MOVE(
     TEMP t168,
     CONST 1),
    JUMP(
     NAME L104),
    LABEL L103,
    MOVE(
     TEMP t168,
     CALL(
      NAME stringEqual,
       TEMP t163,
       NAME L97)),
    JUMP(
     NAME L104),
),
   TEMP t168),
  L106,L101),
 LABEL L106,
 MOVE(
  TEMP t163,
  TEMP t100),
 JUMP(
  NAME L105),
 LABEL L101,
)

Label: L97 with string 

Label: L96 with string  
val it = () : unit

