%%
%term
    EOF 
  | ID of string
  | INT of int | STRING of string 
  | COMMA | COLON | SEMICOLON | LPAREN | RPAREN | LBRACK | RBRACK 
  | LBRACE | RBRACE | DOT 
  | PLUS | MINUS | UMINUS | TIMES | DIVIDE | EQ | NEQ | LT | LE | GT | GE
  | AND | OR | ASSIGN
  | ARRAY | IF | THEN | ELSE | WHILE | FOR | TO | DO | LET | IN | END | OF 
  | BREAK | NIL
  | FUNCTION | VAR | TYPE 

%nonterm  exp | program | lvalue | explist | funarg | funarglist | plusminus
          | timesdivide | compareop | boolop

%pos int
%verbose
%start program
%eop EOF
%noshift EOF

%name Tiger

%nonassoc ASSIGN
%left AND OR
%nonassoc EQ NEQ LT LE GT GE
%left PLUS MINUS
%left TIMES DIVIDE
%left UMINUS

%keyword WHILE FOR TO BREAK LET IN END FUNCTION VAR TYPE ARRAY IF THEN ELSE 
	DO OF NIL

%prefer THEN ELSE LPAREN

%value ID ("bogus")
%value INT (1)
%value STRING ("")

%verbose

%%

program	: exp				()

	
exp: lvalue			()
   | NIL  ()
   | LPAREN exp SEMICOLON exp explist RPAREN ()
   | LPAREN RPAREN ()
   | INT ()
   | STRING ()
   | MINUS exp %prec UMINUS ()
   | ID LPAREN funarg RPAREN ()
   | exp plusminus exp %prec PLUS ()
   | exp timesdivide exp %prec TIMES ()
   | exp compareop exp %prec GE ()
   | exp boolop exp %prec AND ()
   | lvalue ASSIGN exp ()

plusminus : PLUS ()
   | MINUS ()

timesdivide : TIMES ()
   | DIVIDE ()

compareop : EQ ()
       | NEQ ()
       | LT ()
       | LE ()
       | GT ()
       | GE ()

boolop : AND ()
       | OR ()

funarg : ()
       | exp funarglist ()

funarglist : COMMA exp funarglist ()
           | ()

explist : SEMICOLON exp explist ()
        |  ()

lvalue : ID ()
       | lvalue DOT ID ()
       | lvalue LBRACK exp RBRACK ()