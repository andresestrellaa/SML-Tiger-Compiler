structure A = Absyn

%%
%term
    EOF 
  | ID of string
  | INT of int | STRING of string 
  | COMMA | COLON | SEMICOLON | LPAREN | RPAREN | LBRACK | RBRACK 
  | LBRACE | RBRACE | DOT 
  | PLUS | MINUS | UMINUS | TIMES | DIVIDE | EQ | NEQ | LT | LE | GT | GE
  | AND | OR | ASSIGN
  | ARRAY | IF | THEN | ELSE | WHILE | FOR | TO | DO | LET | IN | END | OF 
  | BREAK | NIL
  | FUNCTION | VAR | TYPE 

%nonterm  exp0 | exp | program | lvalue | exptail | funarg | funargtail 
        | decs | dec | tydec | ty | tyfields | vardec | fundec | fundectail
        | letbody | recordbody | recordtail

%pos int
%verbose
%start program
%eop EOF
%noshift EOF

%name Tiger

%nonassoc ASSIGN
%nonassoc ID
%nonassoc WHILE DO
%right THEN
%right ELSE
%nonassoc LBRACK RBRACK OF
%left OR
%left AND
%nonassoc EQ NEQ LT LE GT GE
%left PLUS MINUS
%left TIMES DIVIDE
%left UMINUS

%keyword WHILE FOR TO BREAK LET IN END FUNCTION VAR TYPE ARRAY IF THEN ELSE 
    DO OF NIL

%prefer THEN ELSE LPAREN

%value ID ("bogus")
%value INT (1)
%value STRING ("")

%verbose

%%

program : exp0 ()

exp0 : exp ()
   | lvalue ASSIGN exp ()

exp: lvalue ()
   | NIL  ()
   | LPAREN exp0 SEMICOLON exp0 exptail RPAREN ()
   | LPAREN RPAREN ()
   | LET decs IN letbody END ()
   | INT ()
   | STRING ()
   | ID LPAREN funarg RPAREN ()
   | MINUS exp %prec UMINUS ()
   | exp PLUS exp ()
   | exp MINUS exp ()
   | exp TIMES exp ()
   | exp DIVIDE exp ()
   | exp EQ exp ()
   | exp NEQ exp ()
   | exp LT exp ()
   | exp LE exp ()
   | exp GT exp ()
   | exp GE exp ()
   | exp AND exp ()
   | exp OR exp ()
   | ID LBRACE recordbody RBRACE ()
   | ID LBRACK exp RBRACK OF exp ()
   | IF exp THEN exp ELSE exp ()
   | IF exp THEN exp ELSE lvalue ASSIGN exp ()
   | IF exp THEN lvalue ASSIGN exp ELSE exp ()
   | IF exp THEN lvalue ASSIGN exp ELSE lvalue ASSIGN exp ()
   | IF exp THEN exp ()
   | IF exp THEN lvalue ASSIGN exp ()
   | WHILE exp DO exp ()
   | WHILE exp DO lvalue ASSIGN exp ()
   | FOR ID ASSIGN exp TO exp DO exp ()
   | FOR ID ASSIGN exp TO exp DO lvalue ASSIGN exp ()
   | BREAK ()
   | LPAREN exp0 RPAREN ()

recordbody : ID EQ exp recordtail ()
           | ()

recordtail : COMMA exp recordtail ()
           | ()

letbody : exp0 exptail()
        | ()

decs : decs dec ()
     | ()

dec : tydec ()
    | vardec ()
    | fundec ()

tydec : TYPE ID EQ ty ()

ty : ID ()
   | LBRACE tyfields RBRACE ()
   | ARRAY OF ID ()

tyfields : ()
         | tyfields COMMA ID COLON ID ()
         | ID COLON ID ()

vardec : VAR ID ASSIGN exp ()
       | VAR ID COLON ID ASSIGN exp ()

fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp0 ()
       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp0 ()

funarg : ()
       | exp funargtail ()

funargtail : COMMA exp funargtail ()
           | ()

exptail : SEMICOLON exp0 exptail ()
        |  ()

lvalue : ID ()
       | lvalue DOT ID ()
       | ID LBRACK exp RBRACK ()
       | lvalue LBRACK exp RBRACK ()
